{"ast":null,"code":"// add middleware to our store to catch actions and display them when they get fired/dispatched\n// middleware = function that receive actions and do something with them -> pass them to the rootReducer\nimport { createStore, applyMiddleware } from \"redux\"; // add persistance to the App so on refresh the redux state won't reset\n// import { presistStore } from \"redux-persist\";\n// logger = catches the action and console.logs it\n\nimport logger from \"redux-logger\";\nimport rootReducer from \"./root-reducer\";\nimport persistStore from \"redux-persist/es/persistStore\";\nconst middlewares = [logger]; // creating store with rootReducer and middlewares\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); // create persisted version of the store\n\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/barsen/Documents/WebDevelopment/Rental-ClubRossignol/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","rootReducer","persistStore","middlewares","store","persistor"],"mappings":"AAAA;AACA;AACA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C,C,CACA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,MAAMC,WAAW,GAAG,CAACH,MAAD,CAApB,C,CAEA;;AACA,OAAO,MAAMI,KAAK,GAAGN,WAAW,CAACG,WAAD,EAAcF,eAAe,CAAC,GAAGI,WAAJ,CAA7B,CAAzB,C,CAEP;;AACA,OAAO,MAAME,SAAS,GAAGH,YAAY,CAACE,KAAD,CAA9B","sourcesContent":["// add middleware to our store to catch actions and display them when they get fired/dispatched\n// middleware = function that receive actions and do something with them -> pass them to the rootReducer\nimport { createStore, applyMiddleware } from \"redux\";\n// add persistance to the App so on refresh the redux state won't reset\n// import { presistStore } from \"redux-persist\";\n// logger = catches the action and console.logs it\nimport logger from \"redux-logger\";\n\nimport rootReducer from \"./root-reducer\";\nimport persistStore from \"redux-persist/es/persistStore\";\n\nconst middlewares = [logger];\n\n// creating store with rootReducer and middlewares\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\n// create persisted version of the store\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}