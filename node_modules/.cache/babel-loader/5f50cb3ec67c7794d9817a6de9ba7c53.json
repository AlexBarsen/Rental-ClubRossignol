{"ast":null,"code":"import RentalActionTypes from \"./rental.types\";\nimport { firestore, convertRentalsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchRentalsStart = () => ({\n  type: RentalActionTypes.FETCH_RENTALS_START\n});\nexport const FETCH_RENTALS_SUCCESS = rentalsMap => ({\n  type: RentalActionTypes.FETCH_RENTALS_SUCCESS,\n  payload: rentalsMap\n});\n_c = FETCH_RENTALS_SUCCESS;\nexport const FetchRentalsStartAsync = () => {\n  return dispatch => {\n    // * reference to colllection\n    const rentalRef = firestore.collection(\"rentals\"); // * dispatch fetch start call, we can do this because of \"redux-thunk\"\n\n    dispatch(fetchRentalsStart()); // *  Promised baseed API Call (regular API)\n\n    rentalRef.get().then(snapshot => {\n      // * get Snapshot of the reference\n      const rentalsMap = convertRentalsSnapshotToMap(snapshot); // // * dispatch to update Redux state\n      // updateRentals(rentalsMap);\n      // * set state to false after the state is updated\n      // * -> render <RentalOverview>\n\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};\n_c2 = FetchRentalsStartAsync;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FETCH_RENTALS_SUCCESS\");\n$RefreshReg$(_c2, \"FetchRentalsStartAsync\");","map":{"version":3,"sources":["/Users/barsen/Documents/WebDevelopment/Rental-ClubRossignol/src/redux/rental/rental.actions.js"],"names":["RentalActionTypes","firestore","convertRentalsSnapshotToMap","fetchRentalsStart","type","FETCH_RENTALS_START","FETCH_RENTALS_SUCCESS","rentalsMap","payload","FetchRentalsStartAsync","dispatch","rentalRef","collection","get","then","snapshot","setState","loading"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,gBAA9B;AAEA,SACEC,SADF,EAEEC,2BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,iBAAiB,GAAG,OAAO;AACtCC,EAAAA,IAAI,EAAEJ,iBAAiB,CAACK;AADc,CAAP,CAA1B;AAIP,OAAO,MAAMC,qBAAqB,GAAIC,UAAD,KAAiB;AACpDH,EAAAA,IAAI,EAAEJ,iBAAiB,CAACM,qBAD4B;AAEpDE,EAAAA,OAAO,EAAED;AAF2C,CAAjB,CAA9B;KAAMD,qB;AAKb,OAAO,MAAMG,sBAAsB,GAAG,MAAM;AAC1C,SAAQC,QAAD,IAAc;AACnB;AACA,UAAMC,SAAS,GAAGV,SAAS,CAACW,UAAV,CAAqB,SAArB,CAAlB,CAFmB,CAGnB;;AACAF,IAAAA,QAAQ,CAACP,iBAAiB,EAAlB,CAAR,CAJmB,CAMnB;;AACAQ,IAAAA,SAAS,CAACE,GAAV,GAAgBC,IAAhB,CAAsBC,QAAD,IAAc;AACjC;AACA,YAAMR,UAAU,GAAGL,2BAA2B,CAACa,QAAD,CAA9C,CAFiC,CAGjC;AACA;AACA;AACA;;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KARD;AASD,GAhBD;AAiBD,CAlBM;MAAMR,sB","sourcesContent":["import RentalActionTypes from \"./rental.types\";\n\nimport {\n  firestore,\n  convertRentalsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nexport const fetchRentalsStart = () => ({\n  type: RentalActionTypes.FETCH_RENTALS_START,\n});\n\nexport const FETCH_RENTALS_SUCCESS = (rentalsMap) => ({\n  type: RentalActionTypes.FETCH_RENTALS_SUCCESS,\n  payload: rentalsMap,\n});\n\nexport const FetchRentalsStartAsync = () => {\n  return (dispatch) => {\n    // * reference to colllection\n    const rentalRef = firestore.collection(\"rentals\");\n    // * dispatch fetch start call, we can do this because of \"redux-thunk\"\n    dispatch(fetchRentalsStart());\n\n    // *  Promised baseed API Call (regular API)\n    rentalRef.get().then((snapshot) => {\n      // * get Snapshot of the reference\n      const rentalsMap = convertRentalsSnapshotToMap(snapshot);\n      // // * dispatch to update Redux state\n      // updateRentals(rentalsMap);\n      // * set state to false after the state is updated\n      // * -> render <RentalOverview>\n      this.setState({ loading: false });\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}