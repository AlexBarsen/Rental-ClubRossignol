{"ast":null,"code":"var _jsxFileName = \"/Users/barsen/Documents/WebDevelopment/Rental-ClubRossignol/src/pages/rental/rental.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { updateRentals } from \"../../redux/rental/rental.actions\";\nimport RentalOverview from \"../../components/rental-overview/rental-overview\";\nimport { fetchRentalsStartAsync } from \"../../redux/rental/rental.actions\";\nimport { isRentalFetching } from \"../../redux/rental/rental.selectors\"; // * HOC WithSpinner -> RentalOverview\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RentalOverviewWithSpiner = WithSpinner(RentalOverview);\n_c = RentalOverviewWithSpiner;\n\nclass RentalPage extends React.Component {\n  // // * state for <WithSpinner> HOC\n  // // * true = render <WithSpinner>\n  // // * false = render <RentalOverview>\n  // state = {\n  //   loading: true,\n  // };\n  // unsubscribeFromSnapshot = null;\n  componentDidMount() {// //* destructure dispatch actions\n    // const { updateRentals } = this.props;\n    // // * reference to colllection\n    // const rentalRef = firestore.collection(\"rentals\");\n    // // *  Promised baseed API Call (regular API)\n    // rentalRef.get().then((snapshot) => {\n    //   // * get Snapshot of the reference\n    //   const rentalsMap = convertRentalsSnapshotToMap(snapshot);\n    //   // * dispatch to update Redux state\n    //   updateRentals(rentalsMap);\n    //   // * set state to false after the state is updated\n    //   // * -> render <RentalOverview>\n    //   this.setState({ loading: false });\n    // });\n  }\n\n  render() {\n    const {\n      rentals\n    } = this.props;\n    const {\n      loading\n    } = this.state; // * HOC WithSpinner -> RentalOverview\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rental-page background\",\n      children: /*#__PURE__*/_jsxDEV(RentalOverviewWithSpiner, {\n        rentals: rentals,\n        isLoading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n} // * dispatch action to Reudx store\n\n\nconst mapDispatchToProps = dispatch => ({\n  fetchRentalsStartAsync: () => dispatch(fetchRentalsStartAsync())\n}); // * connect to Redux state\n\n\nconst mapStateToProps = createStructuredSelector({\n  isRentalFetching: isRentalFetching\n});\nexport default connect(null, mapDispatchToProps)(RentalPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"RentalOverviewWithSpiner\");","map":{"version":3,"sources":["/Users/barsen/Documents/WebDevelopment/Rental-ClubRossignol/src/pages/rental/rental.component.jsx"],"names":["React","connect","createStructuredSelector","WithSpinner","updateRentals","RentalOverview","fetchRentalsStartAsync","isRentalFetching","RentalOverviewWithSpiner","RentalPage","Component","componentDidMount","render","rentals","props","loading","state","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,aAAT,QAA8B,mCAA9B;AAEA,OAAOC,cAAP,MAA2B,kDAA3B;AAEA,SAASC,sBAAT,QAAuC,mCAAvC;AACA,SAASC,gBAAT,QAAiC,qCAAjC,C,CAEA;;;AACA,MAAMC,wBAAwB,GAAGL,WAAW,CAACE,cAAD,CAA5C;KAAMG,wB;;AAEN,MAAMC,UAAN,SAAyBT,KAAK,CAACU,SAA/B,CAAyC;AACvC;AACA;AACA;AACA;AACA;AACA;AAEA;AAEAC,EAAAA,iBAAiB,GAAG,CAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB,CAFO,CAIP;;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACE,QAAC,wBAAD;AAA0B,QAAA,OAAO,EAAEH,OAAnC;AAA4C,QAAA,SAAS,EAAEE;AAAvD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AArCsC,C,CAwCzC;;;AACA,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACxCZ,EAAAA,sBAAsB,EAAE,MAAMY,QAAQ,CAACZ,sBAAsB,EAAvB;AADE,CAAf,CAA3B,C,CAIA;;;AACA,MAAMa,eAAe,GAAGjB,wBAAwB,CAAC;AAC/CK,EAAAA,gBAAgB,EAAEA;AAD6B,CAAD,CAAhD;AAIA,eAAeN,OAAO,CAAC,IAAD,EAAOgB,kBAAP,CAAP,CAAkCR,UAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nimport { updateRentals } from \"../../redux/rental/rental.actions\";\n\nimport RentalOverview from \"../../components/rental-overview/rental-overview\";\n\nimport { fetchRentalsStartAsync } from \"../../redux/rental/rental.actions\";\nimport { isRentalFetching } from \"../../redux/rental/rental.selectors\";\n\n// * HOC WithSpinner -> RentalOverview\nconst RentalOverviewWithSpiner = WithSpinner(RentalOverview);\n\nclass RentalPage extends React.Component {\n  // // * state for <WithSpinner> HOC\n  // // * true = render <WithSpinner>\n  // // * false = render <RentalOverview>\n  // state = {\n  //   loading: true,\n  // };\n\n  // unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    // //* destructure dispatch actions\n    // const { updateRentals } = this.props;\n    // // * reference to colllection\n    // const rentalRef = firestore.collection(\"rentals\");\n    // // *  Promised baseed API Call (regular API)\n    // rentalRef.get().then((snapshot) => {\n    //   // * get Snapshot of the reference\n    //   const rentalsMap = convertRentalsSnapshotToMap(snapshot);\n    //   // * dispatch to update Redux state\n    //   updateRentals(rentalsMap);\n    //   // * set state to false after the state is updated\n    //   // * -> render <RentalOverview>\n    //   this.setState({ loading: false });\n    // });\n  }\n\n  render() {\n    const { rentals } = this.props;\n    const { loading } = this.state;\n\n    // * HOC WithSpinner -> RentalOverview\n    return (\n      <div className=\"rental-page background\">\n        <RentalOverviewWithSpiner rentals={rentals} isLoading={loading} />\n      </div>\n    );\n  }\n}\n\n// * dispatch action to Reudx store\nconst mapDispatchToProps = (dispatch) => ({\n  fetchRentalsStartAsync: () => dispatch(fetchRentalsStartAsync()),\n});\n\n// * connect to Redux state\nconst mapStateToProps = createStructuredSelector({\n  isRentalFetching: isRentalFetching,\n});\n\nexport default connect(null, mapDispatchToProps)(RentalPage);\n"]},"metadata":{},"sourceType":"module"}