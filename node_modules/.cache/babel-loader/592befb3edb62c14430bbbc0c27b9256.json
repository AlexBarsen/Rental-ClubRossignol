{"ast":null,"code":"var _jsxFileName = \"/Users/barsen/Documents/WebDevelopment/Rental-ClubRossignol/src/App.js\";\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"./App.scss\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport RentalPage from \"./pages/rental/rental.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInAndSignUp from \"./pages/sign-in-sign-up/sign-in-sign-up-component\";\nimport { auth, createUserPorfileDocument // addCollectionAndDocuments,\n} from \"./firebase/firebase.utils\";\nimport { setCurrentUser } from \"./redux/user/user.actions\";\nimport { selectCurrentUser } from \"./redux/user/user.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\nimport RestaurantPage from \"./pages/restaurant/restaurant.component\";\nimport ContactPage from \"./pages/contact/contact.component\";\nimport Footer from \"./components/footer/footer.component\"; // import { selectRentalsForPreview } from \"./redux/rental/rental.selectors\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n    this.sex = \"sex\";\n  }\n\n  componentDidMount() {\n    // destructre setCurrentUser + the rentalArray from this.props\n    const {\n      setCurrentUser\n    } = this.props;\n    console.log(this.sex);\n    const buci = \"buci\";\n    this.sex = buci;\n    console.log(this.sex);\n    console.log(this);\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        // creating User in Firestore Database\n        // returned userRef from the function\n        const userRef = await createUserPorfileDocument(userAuth); // .data() returns a JSON object of the document in the DB\n        // create a currentUser in the state using the properties of the snapShot as well as the ID\n        // => store current logged in user in our state\n\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      } else {\n        // set currentUser to null if the user logs out\n        setCurrentUser(null); // addCollectionAndDocuments(\n        //   \"rentals\",\n        //   rentalsArray.map(({ categoryName, products }) => ({\n        //     categoryName,\n        //     products,\n        //   }))\n        // );\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    console.log(this.sex);\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: HomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/rental\",\n          component: RentalPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signIn\",\n          render: () => this.props.currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(SignInAndSignUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 62\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/checkout\",\n          component: CheckoutPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/restaurant\",\n          component: RestaurantPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/contact\",\n          component: ContactPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n} // mapStateToProps + connect() = use anywhere we need properties from rooReducer\n// mapStateToProps gives  access to the state(rootReducer)\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser // with connect store rentals from redux into rentalsArray\n  // rentalsArray: selectRentalsForPreview,\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // dispatch = way for Redux to know that whatever object we pass in is going to be an action object\n  // that it is going to pass to every reducer\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n}); // pass mapStateToProps so that it has access to this.props.currentUser\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/barsen/Documents/WebDevelopment/Rental-ClubRossignol/src/App.js"],"names":["React","Route","Switch","Redirect","connect","HomePage","RentalPage","Header","SignInAndSignUp","auth","createUserPorfileDocument","setCurrentUser","selectCurrentUser","createStructuredSelector","CheckoutPage","RestaurantPage","ContactPage","Footer","App","Component","unsubscribeFromAuth","sex","componentDidMount","props","console","log","buci","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport \"./App.scss\";\n\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport RentalPage from \"./pages/rental/rental.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInAndSignUp from \"./pages/sign-in-sign-up/sign-in-sign-up-component\";\nimport {\n  auth,\n  createUserPorfileDocument,\n  // addCollectionAndDocuments,\n} from \"./firebase/firebase.utils\";\nimport { setCurrentUser } from \"./redux/user/user.actions\";\nimport { selectCurrentUser } from \"./redux/user/user.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\nimport RestaurantPage from \"./pages/restaurant/restaurant.component\";\nimport ContactPage from \"./pages/contact/contact.component\";\nimport Footer from \"./components/footer/footer.component\";\n\n// import { selectRentalsForPreview } from \"./redux/rental/rental.selectors\";\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n  sex = \"sex\";\n\n  componentDidMount() {\n    // destructre setCurrentUser + the rentalArray from this.props\n    const { setCurrentUser } = this.props;\n\n    console.log(this.sex);\n\n    const buci = \"buci\";\n\n    this.sex = buci;\n\n    console.log(this.sex);\n    console.log(this);\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        // creating User in Firestore Database\n        // returned userRef from the function\n        const userRef = await createUserPorfileDocument(userAuth);\n\n        // .data() returns a JSON object of the document in the DB\n        // create a currentUser in the state using the properties of the snapShot as well as the ID\n        // => store current logged in user in our state\n        userRef.onSnapshot((snapShot) => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data(),\n          });\n        });\n      } else {\n        // set currentUser to null if the user logs out\n        setCurrentUser(null);\n        // addCollectionAndDocuments(\n        //   \"rentals\",\n        //   rentalsArray.map(({ categoryName, products }) => ({\n        //     categoryName,\n        //     products,\n        //   }))\n        // );\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    console.log(this.sex);\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        {/* imported Switch from react-router-dom, so that react renders the the first <Route> or\n        <Redirect> that the path matches to*/}\n        <Switch>\n          {/* imported Route from react-router-dom, so that different components are rendered\n          when the path changes */}\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/rental\" component={RentalPage} />\n          {/* imported Redirect from react-router-dom. We check if a user is present, if it is null\n          it will render the SignInAndSignUp Page, else if a user exists it will redirect to the hompage */}\n          <Route\n            exact\n            path=\"/signIn\"\n            render={() =>\n              this.props.currentUser ? <Redirect to=\"/\" /> : <SignInAndSignUp />\n            }\n          />\n\n          <Route exact path=\"/checkout\" component={CheckoutPage} />\n          <Route exact path=\"/restaurant\" component={RestaurantPage} />\n          <Route exact path=\"/contact\" component={ContactPage} />\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n// mapStateToProps + connect() = use anywhere we need properties from rooReducer\n\n// mapStateToProps gives  access to the state(rootReducer)\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  // with connect store rentals from redux into rentalsArray\n  // rentalsArray: selectRentalsForPreview,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  // dispatch = way for Redux to know that whatever object we pass in is going to be an action object\n  // that it is going to pass to every reducer\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n});\n\n// pass mapStateToProps so that it has access to this.props.currentUser\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}