{"ast":null,"code":"var _jsxFileName = \"/Users/barsen/Documents/WebDevelopment/Rental-ClubRossignol/src/pages/rental/rental.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { updateRentals } from \"../../redux/rental/rental.actions\";\nimport RentalOverview from \"../../components/rental-overview/rental-overview\";\nimport { firestore, convertRentalsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectRentals, selectRentalsForPreview } from \"../../redux/rental/rental.selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RentalOverviewWithSpiner = WithSpinner(RentalOverview);\n_c = RentalOverviewWithSpiner;\n\nclass RentalPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateRentals\n    } = this.props;\n    const rentalRef = firestore.collection(\"rentals\"); // Observable\n    // this.unsubscribeFromSnapshot = rentalRef.onSnapshot(async (snapshot) => {\n    //   const rentalsMap = convertRentalsSnapshotToMap(snapshot);\n    //   updateRentals(rentalsMap);\n    //   this.setState({ loading: false });\n    // });\n    // API Call\n\n    rentalRef.get().then(snapshot => {\n      const rentalsMap = convertRentalsSnapshotToMap(snapshot);\n      updateRentals(rentalsMap);\n      this.setState({\n        loading: false\n      });\n    }); // REST API (fetch) rental-clubrossingol\n    // fetch(\n    //   \"https://firestore.googleapis.com/v1/projects/rental-clubrossignol/databases/(default)/documents/rentals\"\n    // )\n    //   .then((response) => response.json())\n    //   .then((rentals) => console.log(rentals));\n  }\n\n  render() {\n    const {\n      rentals\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rental-page background\",\n      children: /*#__PURE__*/_jsxDEV(RentalOverviewWithSpiner, {\n        rentals: rentals,\n        isLoading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  rentals: selectRentals,\n  rentalsPreview: selectRentalsForPreview\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateRentals: rentalsMap => dispatch(updateRentals(rentalsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(RentalPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"RentalOverviewWithSpiner\");","map":{"version":3,"sources":["/Users/barsen/Documents/WebDevelopment/Rental-ClubRossignol/src/pages/rental/rental.component.jsx"],"names":["React","connect","WithSpinner","updateRentals","RentalOverview","firestore","convertRentalsSnapshotToMap","createStructuredSelector","selectRentals","selectRentalsForPreview","RentalOverviewWithSpiner","RentalPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","rentalRef","collection","get","then","snapshot","rentalsMap","setState","render","rentals","mapStateToProps","rentalsPreview","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,aAAT,QAA8B,mCAA9B;AAEA,OAAOC,cAAP,MAA2B,kDAA3B;AAEA,SACEC,SADF,EAEEC,2BAFF,QAGO,+BAHP;AAIA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SACEC,aADF,EAEEC,uBAFF,QAGO,qCAHP;;AAKA,MAAMC,wBAAwB,GAAGR,WAAW,CAACE,cAAD,CAA5C;KAAMM,wB;;AAEN,MAAMC,UAAN,SAAyBX,KAAK,CAACY,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD+B;AAAA,SAKvCC,uBALuC,GAKb,IALa;AAAA;;AAOvCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEb,MAAAA;AAAF,QAAoB,KAAKc,KAA/B;AACA,UAAMC,SAAS,GAAGb,SAAS,CAACc,UAAV,CAAqB,SAArB,CAAlB,CAFkB,CAIlB;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEAD,IAAAA,SAAS,CAACE,GAAV,GAAgBC,IAAhB,CAAsBC,QAAD,IAAc;AACjC,YAAMC,UAAU,GAAGjB,2BAA2B,CAACgB,QAAD,CAA9C;AACAnB,MAAAA,aAAa,CAACoB,UAAD,CAAb;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJD,EAdkB,CAoBlB;AAEA;AACA;AACA;AACA;AACA;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKT,KAAzB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACE,QAAC,wBAAD;AAA0B,QAAA,OAAO,EAAEa,OAAnC;AAA4C,QAAA,SAAS,EAAEZ;AAAvD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA7CsC;;AAgDzC,MAAMa,eAAe,GAAGpB,wBAAwB,CAAC;AAC/CmB,EAAAA,OAAO,EAAElB,aADsC;AAE/CoB,EAAAA,cAAc,EAAEnB;AAF+B,CAAD,CAAhD;;AAKA,MAAMoB,kBAAkB,GAAIC,QAAD,KAAe;AACxC3B,EAAAA,aAAa,EAAGoB,UAAD,IAAgBO,QAAQ,CAAC3B,aAAa,CAACoB,UAAD,CAAd;AADC,CAAf,CAA3B;;AAIA,eAAetB,OAAO,CAAC,IAAD,EAAO4B,kBAAP,CAAP,CAAkClB,UAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nimport { updateRentals } from \"../../redux/rental/rental.actions\";\n\nimport RentalOverview from \"../../components/rental-overview/rental-overview\";\n\nimport {\n  firestore,\n  convertRentalsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport {\n  selectRentals,\n  selectRentalsForPreview,\n} from \"../../redux/rental/rental.selectors\";\n\nconst RentalOverviewWithSpiner = WithSpinner(RentalOverview);\n\nclass RentalPage extends React.Component {\n  state = {\n    loading: true,\n  };\n\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { updateRentals } = this.props;\n    const rentalRef = firestore.collection(\"rentals\");\n\n    // Observable\n\n    // this.unsubscribeFromSnapshot = rentalRef.onSnapshot(async (snapshot) => {\n    //   const rentalsMap = convertRentalsSnapshotToMap(snapshot);\n    //   updateRentals(rentalsMap);\n    //   this.setState({ loading: false });\n    // });\n\n    // API Call\n\n    rentalRef.get().then((snapshot) => {\n      const rentalsMap = convertRentalsSnapshotToMap(snapshot);\n      updateRentals(rentalsMap);\n      this.setState({ loading: false });\n    });\n\n    // REST API (fetch) rental-clubrossingol\n\n    // fetch(\n    //   \"https://firestore.googleapis.com/v1/projects/rental-clubrossignol/databases/(default)/documents/rentals\"\n    // )\n    //   .then((response) => response.json())\n    //   .then((rentals) => console.log(rentals));\n  }\n\n  render() {\n    const { rentals } = this.props;\n    const { loading } = this.state;\n\n    return (\n      <div className=\"rental-page background\">\n        <RentalOverviewWithSpiner rentals={rentals} isLoading={loading} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  rentals: selectRentals,\n  rentalsPreview: selectRentalsForPreview,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateRentals: (rentalsMap) => dispatch(updateRentals(rentalsMap)),\n});\n\nexport default connect(null, mapDispatchToProps)(RentalPage);\n"]},"metadata":{},"sourceType":"module"}