{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport rentalReducer from \"./rental/rental.reducer\"; // config redux-persist -> put in whitelist the reducers that will be stored in the \"persist-storage\"\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"cart\"]\n}; // use combineReducer() to combine all the reducers into a rootReducer\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  rental: rentalReducer\n}); // export modifed version of root reducers with persistance capabilities\n\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/Users/barsen/Documents/WebDevelopment/Rental-ClubRossignol/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","rentalReducer","persistConfig","key","whitelist","rootReducer","user","cart","rental"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,aAAP,MAA0B,yBAA1B,C,CAEA;;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBL,EAAAA,OAFoB;AAGpBM,EAAAA,SAAS,EAAE,CAAC,MAAD;AAHS,CAAtB,C,CAMA;;AACA,MAAMC,WAAW,GAAGT,eAAe,CAAC;AAClCU,EAAAA,IAAI,EAAEP,WAD4B;AAElCQ,EAAAA,IAAI,EAAEP,WAF4B;AAGlCQ,EAAAA,MAAM,EAAEP;AAH0B,CAAD,CAAnC,C,CAMA;;AACA,eAAeJ,cAAc,CAACK,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport rentalReducer from \"./rental/rental.reducer\";\n\n// config redux-persist -> put in whitelist the reducers that will be stored in the \"persist-storage\"\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"cart\"],\n};\n\n// use combineReducer() to combine all the reducers into a rootReducer\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  rental: rentalReducer,\n});\n\n// export modifed version of root reducers with persistance capabilities\nexport default persistReducer(persistConfig, rootReducer);\n"]},"metadata":{},"sourceType":"module"}