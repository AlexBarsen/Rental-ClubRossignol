{"ast":null,"code":"var _jsxFileName = \"/Users/barsen/Documents/WebDevelopment/Rental-ClubRossignol/src/App.js\";\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"./App.scss\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport RentalPage from \"./pages/rental/rental.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInAndSignUp from \"./pages/sign-in-sign-up/sign-in-sign-up-component\";\nimport { auth, createUserPorfileDocument // addCollectionAndDocuments,\n} from \"./firebase/firebase.utils\";\nimport { setCurrentUser } from \"./redux/user/user.actions\";\nimport { selectCurrentUser } from \"./redux/user/user.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\nimport RestaurantPage from \"./pages/restaurant/restaurant.component\";\nimport ContactPage from \"./pages/contact/contact.component\";\nimport Footer from \"./components/footer/footer.component\";\nimport { selectRentals, selectRentalsForPreview } from \"./redux/rental/rental.selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  // * method which by default is null\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props; // * destructre setCurrentUser + the rentalArray from this.props\n    // * auth.onStateChanged() = observer which listens for state changes regarding the user\n    // * -> returns null(user not signed in) / object(user signed in)\n\n    console.log(this.props.selectRentals);\n    console.log(this.props.entalsArray);\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      // * if onAuthStateChanged() returns an object(user singed in)\n      if (userAuth) {\n        const userRef = await createUserPorfileDocument(userAuth); //\n\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        }); // * using the reference returned by createUserProfileDocument() set’s the  current user in the App’s state by using Redux\n      } else {\n        setCurrentUser(null); // * if userAuth doesn't exist (no user signed in) set the currentUser in the Redux state to null\n        // addCollectionAndDocuments(\n        //   \"rentals\",\n        //   rentalsArray.map(({ categoryName, products }) => ({\n        //     categoryName,\n        //     products,\n        //   }))\n        // );\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: HomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/rental\",\n          component: RentalPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signIn\",\n          render: () => this.props.currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(SignInAndSignUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 62\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/checkout\",\n          component: CheckoutPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/restaurant\",\n          component: RestaurantPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/contact\",\n          component: ContactPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n} // * mapStateToProps gives access to the Redux state(rootReducer)\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  rentalsArray: selectRentalsForPreview,\n  selectRentals: selectRentals\n}); // * mapDispatchToProps(dispatch) = function which does a dispatch to the store to execute a function\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n}); // * connect() connects the React component with the Redux store\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/barsen/Documents/WebDevelopment/Rental-ClubRossignol/src/App.js"],"names":["React","Route","Switch","Redirect","connect","HomePage","RentalPage","Header","SignInAndSignUp","auth","createUserPorfileDocument","setCurrentUser","selectCurrentUser","createStructuredSelector","CheckoutPage","RestaurantPage","ContactPage","Footer","selectRentals","selectRentalsForPreview","App","Component","unsubscribeFromAuth","componentDidMount","props","console","log","entalsArray","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","currentUser","mapStateToProps","rentalsArray","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport \"./App.scss\";\n\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport RentalPage from \"./pages/rental/rental.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInAndSignUp from \"./pages/sign-in-sign-up/sign-in-sign-up-component\";\nimport {\n  auth,\n  createUserPorfileDocument,\n  // addCollectionAndDocuments,\n} from \"./firebase/firebase.utils\";\nimport { setCurrentUser } from \"./redux/user/user.actions\";\nimport { selectCurrentUser } from \"./redux/user/user.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\nimport RestaurantPage from \"./pages/restaurant/restaurant.component\";\nimport ContactPage from \"./pages/contact/contact.component\";\nimport Footer from \"./components/footer/footer.component\";\nimport {\n  selectRentals,\n  selectRentalsForPreview,\n} from \"./redux/rental/rental.selectors\";\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null; // * method which by default is null\n\n  componentDidMount() {\n    const { setCurrentUser } = this.props; // * destructre setCurrentUser + the rentalArray from this.props\n\n    // * auth.onStateChanged() = observer which listens for state changes regarding the user\n    // * -> returns null(user not signed in) / object(user signed in)\n\n    console.log(this.props.selectRentals);\n    console.log(this.props.entalsArray);\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      // * if onAuthStateChanged() returns an object(user singed in)\n      if (userAuth) {\n        const userRef = await createUserPorfileDocument(userAuth);\n\n        //\n        userRef.onSnapshot((snapShot) => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data(),\n          });\n        }); // * using the reference returned by createUserProfileDocument() set’s the  current user in the App’s state by using Redux\n      } else {\n        setCurrentUser(null); // * if userAuth doesn't exist (no user signed in) set the currentUser in the Redux state to null\n        // addCollectionAndDocuments(\n        //   \"rentals\",\n        //   rentalsArray.map(({ categoryName, products }) => ({\n        //     categoryName,\n        //     products,\n        //   }))\n        // );\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        {/* </Switch> renders the the first <Route> or <Redirect> that the 'path' matches to*/}\n        <Switch>\n          {/* <Route> renders the component to which the 'path' matches to */}\n          <Route exact path=\"/\" component={HomePage} />{\" \"}\n          <Route path=\"/rental\" component={RentalPage} />\n          {/* <Redirect> will render the 'path' */}\n          <Route\n            exact\n            path=\"/signIn\"\n            render={() =>\n              this.props.currentUser ? <Redirect to=\"/\" /> : <SignInAndSignUp />\n            }\n          />\n          <Route exact path=\"/checkout\" component={CheckoutPage} />\n          <Route exact path=\"/restaurant\" component={RestaurantPage} />\n          <Route exact path=\"/contact\" component={ContactPage} />\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n// * mapStateToProps gives access to the Redux state(rootReducer)\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  rentalsArray: selectRentalsForPreview,\n  selectRentals: selectRentals,\n});\n\n// * mapDispatchToProps(dispatch) = function which does a dispatch to the store to execute a function\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n});\n\n// * connect() connects the React component with the Redux store\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}