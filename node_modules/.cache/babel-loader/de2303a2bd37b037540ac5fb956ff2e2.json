{"ast":null,"code":"var _jsxFileName = \"/Users/barsen/Documents/WebDevelopment/Rental-ClubRossignol/src/pages/rental/rental.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { updateRentals } from \"../../redux/rental/rental.actions\";\nimport RentalOverview from \"../../components/rental-overview/rental-overview\";\nimport { firestore, convertRentalsSnapshotToMap } from \"../../firebase/firebase.utils\"; // * HOC WithSpinner -> RentalOverview\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RentalOverviewWithSpiner = WithSpinner(RentalOverview);\n_c = RentalOverviewWithSpiner;\n\nclass RentalPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    //* destructure dispatch actions\n    const {\n      updateRentals\n    } = this.props; // * reference to colllection\n\n    const rentalRef = firestore.collection(\"rentals\"); // *  Promised baseed API Call (regular API)\n\n    rentalRef.get().then(snapshot => {\n      // * get Snapshot of the reference\n      const rentalsMap = convertRentalsSnapshotToMap(snapshot); // * dispatch to update Redux state\n\n      updateRentals(rentalsMap); // * set state to false after the state is updated\n      // * -> render <RentalOverview>\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      rentals\n    } = this.props;\n    const {\n      loading\n    } = this.state; // * HOC WithSpinner -> RentalOverview\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rental-page background\",\n      children: /*#__PURE__*/_jsxDEV(RentalOverviewWithSpiner, {\n        rentals: rentals,\n        isLoading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n} // * dispatch action to Reudx store\n\n\nconst mapDispatchToProps = dispatch => ({\n  updateRentals: rentalsMap => dispatch(updateRentals(rentalsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(RentalPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"RentalOverviewWithSpiner\");","map":{"version":3,"sources":["/Users/barsen/Documents/WebDevelopment/Rental-ClubRossignol/src/pages/rental/rental.component.jsx"],"names":["React","connect","WithSpinner","updateRentals","RentalOverview","firestore","convertRentalsSnapshotToMap","RentalOverviewWithSpiner","RentalPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","rentalRef","collection","get","then","snapshot","rentalsMap","setState","render","rentals","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,aAAT,QAA8B,mCAA9B;AAEA,OAAOC,cAAP,MAA2B,kDAA3B;AAEA,SACEC,SADF,EAEEC,2BAFF,QAGO,+BAHP,C,CAKA;;;AACA,MAAMC,wBAAwB,GAAGL,WAAW,CAACE,cAAD,CAA5C;KAAMG,wB;;AAEN,MAAMC,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAIvCC,KAJuC,GAI/B;AACNC,MAAAA,OAAO,EAAE;AADH,KAJ+B;AAAA,SAQvCC,uBARuC,GAQb,IARa;AAAA;;AAUvCC,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAM;AAAEV,MAAAA;AAAF,QAAoB,KAAKW,KAA/B,CAFkB,CAGlB;;AACA,UAAMC,SAAS,GAAGV,SAAS,CAACW,UAAV,CAAqB,SAArB,CAAlB,CAJkB,CAMlB;;AACAD,IAAAA,SAAS,CAACE,GAAV,GAAgBC,IAAhB,CAAsBC,QAAD,IAAc;AACjC;AACA,YAAMC,UAAU,GAAGd,2BAA2B,CAACa,QAAD,CAA9C,CAFiC,CAGjC;;AACAhB,MAAAA,aAAa,CAACiB,UAAD,CAAb,CAJiC,CAKjC;AACA;;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KARD;AASD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKT,KAAzB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB,CAFO,CAIP;;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACE,QAAC,wBAAD;AAA0B,QAAA,OAAO,EAAEa,OAAnC;AAA4C,QAAA,SAAS,EAAEZ;AAAvD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAtCsC,C,CAyCzC;;;AACA,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxCtB,EAAAA,aAAa,EAAGiB,UAAD,IAAgBK,QAAQ,CAACtB,aAAa,CAACiB,UAAD,CAAd;AADC,CAAf,CAA3B;;AAIA,eAAenB,OAAO,CAAC,IAAD,EAAOuB,kBAAP,CAAP,CAAkChB,UAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nimport { updateRentals } from \"../../redux/rental/rental.actions\";\n\nimport RentalOverview from \"../../components/rental-overview/rental-overview\";\n\nimport {\n  firestore,\n  convertRentalsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\n// * HOC WithSpinner -> RentalOverview\nconst RentalOverviewWithSpiner = WithSpinner(RentalOverview);\n\nclass RentalPage extends React.Component {\n  // * state for <WithSpinner> HOC\n  // * true = render <WithSpinner>\n  // * false = render <RentalOverview>\n  state = {\n    loading: true,\n  };\n\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    //* destructure dispatch actions\n    const { updateRentals } = this.props;\n    // * reference to colllection\n    const rentalRef = firestore.collection(\"rentals\");\n\n    // *  Promised baseed API Call (regular API)\n    rentalRef.get().then((snapshot) => {\n      // * get Snapshot of the reference\n      const rentalsMap = convertRentalsSnapshotToMap(snapshot);\n      // * dispatch to update Redux state\n      updateRentals(rentalsMap);\n      // * set state to false after the state is updated\n      // * -> render <RentalOverview>\n      this.setState({ loading: false });\n    });\n  }\n\n  render() {\n    const { rentals } = this.props;\n    const { loading } = this.state;\n\n    // * HOC WithSpinner -> RentalOverview\n    return (\n      <div className=\"rental-page background\">\n        <RentalOverviewWithSpiner rentals={rentals} isLoading={loading} />\n      </div>\n    );\n  }\n}\n\n// * dispatch action to Reudx store\nconst mapDispatchToProps = (dispatch) => ({\n  updateRentals: (rentalsMap) => dispatch(updateRentals(rentalsMap)),\n});\n\nexport default connect(null, mapDispatchToProps)(RentalPage);\n"]},"metadata":{},"sourceType":"module"}