{"ast":null,"code":"// export const addItemToCart = (cartItems, cartItemToAdd) => {\n//   // check if cartItemToAdd already exists in our cartItems -> return true or false\n//   const existingCartItem = cartItems.find(\n//     (cartItem) => cartItem.productId === cartItemToAdd.productId\n//   );\n//   // if (existingCartItem) {\n//   //   return cartItems.map((cartItem) =>\n//   //     cartItem.id === cartItemToAdd.id ? [cartItem, cartItemToAdd] : cartItem\n//   //   );\n//   // }\n//   // if it exists we return a new array/version of the cartItems\n//   if (existingCartItem) {\n//     // if cartItem.id === cartItemToAdd -> create new object with the cartItem in which\n//     // the quantity gets incremeted by 1, if it doesn't match just return the cartItem\n//     return cartItems.map((cartItem) =>\n//       cartItem.productId === cartItemToAdd.productId\n//         ? { ...cartItem, quantity: cartItem.quantity + 1 }\n//         : cartItem\n//     );\n//   }\n// };\n// export const addItemToCart = (cartItems, itemToAdd) => {\n//   if (cartItems) return [cartItems.map((cartItem) => cartItem), itemToAdd];\n//   return [itemToAdd];\n// };\n//   // if the item doesn't exist, return a new array with the cartItems which already exists\n//   // while also adding an object with the cartItemToAdd with quantity of 1\n//   return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n// };\n// import uuid from \"react-uuid\";\nexport const editItem = (cartItems, cartItemToEdit) => {\n  return cartItems.map(cartItem => cartItem.id === cartItemToEdit.id ? cartItemToEdit : cartItem);\n}; // export const addItemToCart = (cartItems, cartItemToAdd) => {\n//   const id = uuid();\n//   cartItemToAdd.id = id;\n//   console.log(cartItemToAdd.id);\n//   return [...cartItems, cartItemToAdd];\n// };","map":{"version":3,"sources":["/Users/barsen/Documents/WebDevelopment/Rental-ClubRossignol/src/redux/cart/cart.utils.js"],"names":["editItem","cartItems","cartItemToEdit","map","cartItem","id"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAO,MAAMA,QAAQ,GAAG,CAACC,SAAD,EAAYC,cAAZ,KAA+B;AACrD,SAAOD,SAAS,CAACE,GAAV,CAAeC,QAAD,IACnBA,QAAQ,CAACC,EAAT,KAAgBH,cAAc,CAACG,EAA/B,GAAoCH,cAApC,GAAqDE,QADhD,CAAP;AAGD,CAJM,C,CAMP;AACA;AAEA;AACA;AAEA;AACA","sourcesContent":["// export const addItemToCart = (cartItems, cartItemToAdd) => {\n//   // check if cartItemToAdd already exists in our cartItems -> return true or false\n//   const existingCartItem = cartItems.find(\n//     (cartItem) => cartItem.productId === cartItemToAdd.productId\n//   );\n\n//   // if (existingCartItem) {\n//   //   return cartItems.map((cartItem) =>\n//   //     cartItem.id === cartItemToAdd.id ? [cartItem, cartItemToAdd] : cartItem\n//   //   );\n//   // }\n\n//   // if it exists we return a new array/version of the cartItems\n//   if (existingCartItem) {\n//     // if cartItem.id === cartItemToAdd -> create new object with the cartItem in which\n//     // the quantity gets incremeted by 1, if it doesn't match just return the cartItem\n//     return cartItems.map((cartItem) =>\n//       cartItem.productId === cartItemToAdd.productId\n//         ? { ...cartItem, quantity: cartItem.quantity + 1 }\n//         : cartItem\n//     );\n//   }\n// };\n\n// export const addItemToCart = (cartItems, itemToAdd) => {\n//   if (cartItems) return [cartItems.map((cartItem) => cartItem), itemToAdd];\n//   return [itemToAdd];\n// };\n//   // if the item doesn't exist, return a new array with the cartItems which already exists\n//   // while also adding an object with the cartItemToAdd with quantity of 1\n//   return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n// };\n\n// import uuid from \"react-uuid\";\n\nexport const editItem = (cartItems, cartItemToEdit) => {\n  return cartItems.map((cartItem) =>\n    cartItem.id === cartItemToEdit.id ? cartItemToEdit : cartItem\n  );\n};\n\n// export const addItemToCart = (cartItems, cartItemToAdd) => {\n//   const id = uuid();\n\n//   cartItemToAdd.id = id;\n//   console.log(cartItemToAdd.id);\n\n//   return [...cartItems, cartItemToAdd];\n// };\n"]},"metadata":{},"sourceType":"module"}