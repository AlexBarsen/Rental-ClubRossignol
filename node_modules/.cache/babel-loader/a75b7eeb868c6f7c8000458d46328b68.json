{"ast":null,"code":"var _jsxFileName = \"/Users/barsen/Documents/WebDevelopment/Rental-ClubRossignol/src/pages/rental/rental.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport RentalCategory from \"../../components/rental-category/rental-category\";\nimport { updateRentals } from \"../../redux/rental/rental.actions\";\nimport { selectRentalsForPreview } from \"../../redux/rental/rental.selectors\";\nimport { firestore, convertRentalsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { Route } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RentalCateogryWithSpiner = WithSpinner(RentalCategory);\n_c = RentalCateogryWithSpiner;\n\nclass RentalPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateRentals\n    } = this.props;\n    const rentalRef = firestore.collection(\"rentals\");\n    this.unsubscribeFromSnapshot = rentalRef.onSnapshot(async snapshot => {\n      const rentalsMap = convertRentalsSnapshotToMap(snapshot);\n      updateRentals(rentalsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      rentals\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rental-page background\",\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/rental\",\n        render: rentals.map(({\n          id,\n          ...otherRentalProps\n        }) => /*#__PURE__*/_jsxDEV(RentalCateogryWithSpiner, {\n          isLoading: loading,\n          ...otherRentalProps\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateRentals: rentalsMap => dispatch(updateRentals(rentalsMap))\n});\n\nconst mapStateToProps = createStructuredSelector({\n  rentals: selectRentalsForPreview\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(RentalPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"RentalCateogryWithSpiner\");","map":{"version":3,"sources":["/Users/barsen/Documents/WebDevelopment/Rental-ClubRossignol/src/pages/rental/rental.component.jsx"],"names":["React","connect","createStructuredSelector","WithSpinner","RentalCategory","updateRentals","selectRentalsForPreview","firestore","convertRentalsSnapshotToMap","Route","RentalCateogryWithSpiner","RentalPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","rentalRef","collection","onSnapshot","snapshot","rentalsMap","setState","render","rentals","map","id","otherRentalProps","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,cAAP,MAA2B,kDAA3B;AACA,SAASC,aAAT,QAA8B,mCAA9B;AAEA,SAASC,uBAAT,QAAwC,qCAAxC;AAEA,SACEC,SADF,EAEEC,2BAFF,QAGO,+BAHP;AAIA,SAASC,KAAT,QAAsB,cAAtB;;AAEA,MAAMC,wBAAwB,GAAGP,WAAW,CAACC,cAAD,CAA5C;KAAMM,wB;;AAEN,MAAMC,UAAN,SAAyBX,KAAK,CAACY,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD+B;AAAA,SAKvCC,uBALuC,GAKb,IALa;AAAA;;AAOvCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEX,MAAAA;AAAF,QAAoB,KAAKY,KAA/B;AACA,UAAMC,SAAS,GAAGX,SAAS,CAACY,UAAV,CAAqB,SAArB,CAAlB;AAEA,SAAKJ,uBAAL,GAA+BG,SAAS,CAACE,UAAV,CAAqB,MAAOC,QAAP,IAAoB;AACtE,YAAMC,UAAU,GAAGd,2BAA2B,CAACa,QAAD,CAA9C;AACAhB,MAAAA,aAAa,CAACiB,UAAD,CAAb;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJ8B,CAA/B;AAKD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKR,KAAzB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,MAAM,EAAEY,OAAO,CAACC,GAAR,CAAY,CAAC;AAAEC,UAAAA,EAAF;AAAM,aAAGC;AAAT,SAAD,kBAClB,QAAC,wBAAD;AACE,UAAA,SAAS,EAAEd,OADb;AAAA,aAGMc;AAHN,WAEOD,EAFP;AAAA;AAAA;AAAA;AAAA,gBADM;AAHV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AApCsC;;AAuCzC,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACxCzB,EAAAA,aAAa,EAAGiB,UAAD,IAAgBQ,QAAQ,CAACzB,aAAa,CAACiB,UAAD,CAAd;AADC,CAAf,CAA3B;;AAIA,MAAMS,eAAe,GAAG7B,wBAAwB,CAAC;AAC/CuB,EAAAA,OAAO,EAAEnB;AADsC,CAAD,CAAhD;AAIA,eAAeL,OAAO,CAAC8B,eAAD,EAAkBF,kBAAlB,CAAP,CAA6ClB,UAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nimport RentalCategory from \"../../components/rental-category/rental-category\";\nimport { updateRentals } from \"../../redux/rental/rental.actions\";\n\nimport { selectRentalsForPreview } from \"../../redux/rental/rental.selectors\";\n\nimport {\n  firestore,\n  convertRentalsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\nimport { Route } from \"react-router\";\n\nconst RentalCateogryWithSpiner = WithSpinner(RentalCategory);\n\nclass RentalPage extends React.Component {\n  state = {\n    loading: true,\n  };\n\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { updateRentals } = this.props;\n    const rentalRef = firestore.collection(\"rentals\");\n\n    this.unsubscribeFromSnapshot = rentalRef.onSnapshot(async (snapshot) => {\n      const rentalsMap = convertRentalsSnapshotToMap(snapshot);\n      updateRentals(rentalsMap);\n      this.setState({ loading: false });\n    });\n  }\n\n  render() {\n    const { rentals } = this.props;\n    const { loading } = this.state;\n    return (\n      <div className=\"rental-page background\">\n        <Route\n          exact\n          path=\"/rental\"\n          render={rentals.map(({ id, ...otherRentalProps }) => (\n            <RentalCateogryWithSpiner\n              isLoading={loading}\n              key={id}\n              {...otherRentalProps}\n            />\n          ))}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateRentals: (rentalsMap) => dispatch(updateRentals(rentalsMap)),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  rentals: selectRentalsForPreview,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RentalPage);\n"]},"metadata":{},"sourceType":"module"}